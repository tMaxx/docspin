@model DocSpin2.Models.Document
@using DocSpin2.Models
@using System.Web.Mvc.Html

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Document</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

		@Html.Partial("_ACSFieldPartial", Model == null ? new AccessControlSetting() : Model.ACS)

		<div class="form-group">
			@Html.LabelFor(model => model.RepositoryId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="select">
					@Html.DropDownListFor(model => Model.RepositoryId, ViewData["RepositoryList"] as SelectList)
					@Html.ValidationMessageFor(model => model.RepositoryId, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		@if (ApplicationUser.CurrentUserRole == UserRole.Admin)
		{ 
			<div class="form-group">
				@Html.LabelFor(model => model.IsRemoved, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.IsRemoved)
						@Html.ValidationMessageFor(model => model.IsRemoved, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
		}

        <div class="form-group">
            <div class="col-md-8">
                <table>
                    <tr>
                        <td>File:</td>
                        <td><input type="file" name="Files" id="Files" multiple /></td>
                    </tr>
                </table>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
